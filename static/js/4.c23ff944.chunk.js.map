{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/ContactsItem/ContactsItem.module.css","components/filter/Filter.module.css","views/Contacts/Contacts.module.css","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/contactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/filter/Filter.js","views/Contacts/Contacts.jsx"],"names":["module","exports","addContact","name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContacts","a","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFiltered","state","contacts","filter","getAllContacts","items","getLoading","loading","getErrorMessage","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","item","includes","ContactForm","handleChange","e","setState","target","value","onHandleSubmit","preventDefault","props","find","alert","onSubmit","className","form","this","inputTitle","form_input","type","onChange","button","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","onDelete","filtered","map","contactItem","delete_button","onClick","changeFilter","inputForm","Contacts","isLoadingContacts","isContactIncludes","container","formTitle","color","height","width","contactsCont","contactsList","length"],"mappings":"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","file":"static/js/4.c23ff944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3mnjm\",\"form_input\":\"ContactForm_form_input__3M9gH\",\"button\":\"ContactForm_button__312Ap\",\"inputTitle\":\"ContactForm_inputTitle__15iGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"ContactsItem_delete_button__30NFB\",\"contactItem\":\"ContactsItem_contactItem__wwWSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"Filter_inputForm__3j_vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1ks47\",\"formTitle\":\"Contacts_formTitle__1boDy\",\"contactsCont\":\"Contacts_contactsCont__7Z3Xp\",\"contactsList\":\"Contacts_contactsList__2dI3C\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactError,\n  deleteContactSuccess,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n} from './phonebook-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFiltered = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getErrorMessage = state => state.contacts.error;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFiltered],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getFiltered,\n  getAllContacts,\n  getErrorMessage,\n  getFilteredContacts,\n};\n","import React, { Component } from 'react';\nimport { form, button, form_input, inputTitle } from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    const found = this.props.contacts.find(item => {\n      return item.name === this.state.name || item.number === this.state.number;\n    });\n    if (found) {\n      alert('Такой контакт уже есть!');\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={form} onSubmit={this.onHandleSubmit}>\n        <h4 className={inputTitle}>Name</h4>\n        <input\n          className={form_input}\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        ></input>\n        <h4 className={inputTitle}>Number</h4>\n        <input\n          className={form_input}\n          type=\"number\"\n          name=\"number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        ></input>\n        <button type=\"submit\" className={button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onSubmit: contactsOperations.addContact,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { delete_button, contactItem } from './ContactsItem.module.css';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nconst ContactsItem = ({ filtered, onDelete }) => {\n  return filtered.map(({ name, number, id }) => {\n    return (\n      <li key={id} name={name} className={contactItem}>\n        <p>name: {name}</p>\n        <p>tel.: {number}</p>\n        <button\n          type=\"button\"\n          className={delete_button}\n          onClick={() => onDelete(id)}\n        ></button>\n      </li>\n    );\n  });\n};\n\nconst mapDispatchToProps = {\n  onDelete: contactsOperations.deleteContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactsItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport { inputForm } from './Filter.module.css';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={inputForm}\n      ></input>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFiltered(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport ContactsItem from '../../components/ContactsItem/ContactsItem';\nimport Filter from '../../components/filter/Filter';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/phonebook';\nimport {\n  container,\n  formTitle,\n  contactsCont,\n  contactsList,\n} from './Contacts.module.css';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { isLoadingContacts, isContactIncludes, error } = this.props;\n    return (\n      <div className={container}>\n        <h2 className={formTitle}>Phonebook</h2>\n        <ContactForm />\n        {error && <p className=\"error-message\">{error}</p>}\n        {isLoadingContacts && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {isContactIncludes && (\n          <div className={contactsCont}>\n            <h2 className={formTitle}>Contacts</h2>\n            <Filter />\n            <ul className={contactsList}>\n              <ContactsItem filtered={this.props.contacts} />\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n  isContactIncludes: state.contacts.items.length > 0,\n  isLoadingContacts: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getErrorMessage(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}