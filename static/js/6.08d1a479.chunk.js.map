{"version":3,"sources":["views/Register/Register.jsx","views/Register/Register.module.css"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","className","authForm","authLabel","type","onChange","authInput","registerButton","Component","mapDispatchToProps","authOperations","register","connect","module","exports"],"mappings":"sOAUMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,8BACE,uBACEW,SAAUD,KAAKL,aACfO,aAAa,MACbC,UAAWC,WAHb,UAKE,wBAAOD,UAAWE,YAAlB,+BAEE,uBACEC,KAAK,OACLlB,KAAK,OACLK,MAAOL,EACPmB,SAAUP,KAAKT,aACfY,UAAWK,iBAIf,wBAAOL,UAAWE,YAAlB,2CAEE,uBACEC,KAAK,QACLlB,KAAK,QACLK,MAAOJ,EACPkB,SAAUP,KAAKT,aACfY,UAAWK,iBAIf,wBAAOL,UAAWE,YAAlB,iDAEE,uBACEC,KAAK,WACLlB,KAAK,WACLK,MAAOH,EACPiB,SAAUP,KAAKT,aACfY,UAAWK,iBAIf,wBAAQF,KAAK,SAASH,UAAWM,iBAAjC,yF,GA5DiBC,aAqErBC,EAAqB,CACzBZ,WAAYa,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC5B,I,mBClFjD6B,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,UAAY,4BAA4B,eAAiB","file":"static/js/6.08d1a479.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport {\n  authForm,\n  authLabel,\n  registerButton,\n  authInput,\n} from './Register.module.css';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onRegister(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n          className={authForm}\n        >\n          <label className={authLabel}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              className={authInput}\n            />\n          </label>\n\n          <label className={authLabel}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n              className={authInput}\n            />\n          </label>\n\n          <label className={authLabel}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              className={authInput}\n            />\n          </label>\n\n          <button type=\"submit\" className={registerButton}>\n            Регистрация\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"Register_authForm__yIoUT\",\"authLabel\":\"Register_authLabel__90R_K\",\"authInput\":\"Register_authInput__1f64L\",\"registerButton\":\"Register_registerButton__nq4Xv\"};"],"sourceRoot":""}